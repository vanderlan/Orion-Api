trigger:
    branches:
        include:
        - master
        - refs/tags/build*

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:

    - task: UseDotNet@2 
      displayName: 'Configure .NET Core Version'
      inputs:
        version: '7.0.x'
        packageType: sdk
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'Build'

    - task: DotNetCoreCLI@2
      displayName: "Test"
      inputs:
        command: test
        projects: 'Orion.Test/Orion.Test.csproj'
        arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Include="[Orion.*]*" /p:Exclude="[*Test]*"'
    
    - task: codecoveragecomparerbt@1
      displayName: 'Code Coverage'
      inputs:
        codecoveragetarget: '85'
        codecoveragemeasurementmethod: 'Lines'

    - task: DotNetCoreCLI@2
      displayName: 'Publish artifacts'
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '-r linux-x64 --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Upload Artifacts'
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'builds'
    
    - task: Docker@2
      displayName: 'Login Docker Hub'
      inputs:
        containerRegistry: 'Docker Hub'
        command: 'login'
    
    - task: Docker@2
      displayName: 'Docker Hub Publish'
      inputs:
        containerRegistry: 'Docker Hub'
        repository: 'vanderlangs/orionapi'
        tags: |
            $(Build.BuildId)
            latest
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
